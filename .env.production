# Production Environment Configuration for Dell Server
# Copy this file to .env and configure with your production values

# Flask Configuration
FLASK_ENV=production
FLASK_DEBUG=False
SECRET_KEY=your_production_secret_key_here_change_this

# Database Configuration
# For production SQLite (recommended for single-server deployment)
DATABASE_URL=sqlite:///var/lib/stripe_dashboard/production.db

# For PostgreSQL (if needed)
# DATABASE_URL=postgresql://username:password@localhost/stripe_dashboard

# For MySQL (if needed)
# DATABASE_URL=mysql://username:password@localhost/stripe_dashboard

# Network Configuration
HOST=0.0.0.0
PORT=5000

# Security Configuration
# Generate a strong secret key for production
# python -c "import secrets; print(secrets.token_hex(32))"
SESSION_COOKIE_SECURE=False
SESSION_COOKIE_HTTPONLY=True
SESSION_COOKIE_SAMESITE=Lax

# Application Configuration
COMPANY_NAME=Your Company Name
TIMEZONE=Asia/Hong_Kong

# Currency Exchange Rates (CNY to HKD)
CNY_TO_HKD_RATE=1.0732

# Logging Configuration
LOG_LEVEL=INFO
LOG_TO_FILE=True
LOG_ROTATION=True

# Performance Configuration
SQLALCHEMY_POOL_SIZE=10
SQLALCHEMY_POOL_TIMEOUT=20
SQLALCHEMY_POOL_RECYCLE=3600

# File Upload Configuration
MAX_CONTENT_LENGTH=16777216  # 16MB

# Rate Limiting (if implemented)
RATELIMIT_STORAGE_URL=memory://

# Monitoring and Health Checks
HEALTH_CHECK_ENABLED=True
METRICS_ENABLED=True

# Network Security
TRUSTED_PROXIES=192.168.0.0/16,10.0.0.0/8,172.16.0.0/12

# CORS Configuration (if needed for API access)
CORS_ORIGINS=*
CORS_METHODS=GET,POST,PUT,DELETE,OPTIONS
CORS_HEADERS=Content-Type,Authorization

# Cache Configuration
CACHE_TYPE=simple
CACHE_DEFAULT_TIMEOUT=300

# Email Configuration (if notifications needed)
# MAIL_SERVER=smtp.company.com
# MAIL_PORT=587
# MAIL_USE_TLS=True
# MAIL_USERNAME=noreply@company.com
# MAIL_PASSWORD=email_password

# Backup Configuration
BACKUP_ENABLED=True
BACKUP_RETENTION_DAYS=30
BACKUP_DIRECTORY=/var/backups/stripe_dashboard